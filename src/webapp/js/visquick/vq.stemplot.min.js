//intialize with var data ={DATATYPE : "vq.models.StemPlotData", CONTENTS : {DATAARRAY : data_array} };
// notifier = function(x,dx) where x = position within scroll bar range,  dx = total length of window in scale of scroll bar
//draw with draw (data ={DATATYPE : "vq.models.StemPlotData", {DATAARRAY : data_array} }
//				and options = {plotHeight: xx, plotWidth : xx, vertical_padding: xx,
//				horizontal_padding : xx , maxPosition: xx, minPosition: xx,
//				maxRange: xx, minRange: xx, dblclick_notifier : function(x,dx),
//				fixedWindowWidth: xx, scaleMultiplier : xx, interval : xx, font : "fontname"}
//note dblclick_notifer is the last listed option.  This can be used to create a "zoom" effect by re-instanstiating the scroll bar with new parameters.
vq.StemPlot=function(){vq.Vis.call(this),this.height(500),this.width(500),this.vertical_padding(30),this.horizontal_padding(30)},vq.StemPlot.prototype=pv.extend(vq.Vis),vq.StemPlot.prototype._setOptionDefaults=function(a){a.height!=null&&this.height(a.height),a.width!=null&&this.width(a.width),a.container&&this.container(a.container),a.vertical_padding!=null&&this.vertical_padding(a.vertical_padding),a.horizontal_padding!=null&&this.horizontal_padding(a.horizontal_padding)},vq.StemPlot.prototype.setXRange=function(a,b){this.posX.domain(a,a+b),this.redraw()},vq.StemPlot.prototype.draw=function(a){this._bl_data=new vq.models.StemPlotData(a),this._bl_data.isDataReady()&&(this._setOptionDefaults(this._bl_data),this.render())},vq.StemPlot.prototype.render=function(){var a=this;this._data=this._bl_data._data,this.visibleWidth=this.width()-2*this.horizontal_padding(),this.visibleHeight=this.height()-this.vertical_padding()*2,this.context_height=50,this.focus_height=this.visibleHeight-this.context_height;var b=a._bl_data.COLUMNID.x,c=a._bl_data.COLUMNID.y;this.posX=pv.Scale.linear().range(0,a.visibleWidth),this.posY=pv.Scale.linear().range(0,a.focus_height),this.context_posX=pv.Scale.linear(0,pv.max(a._data.map(function(a){return a[b]}))).range(0,a.visibleWidth).nice(),this.context_posY=pv.Scale.linear(0,pv.max(a._data.map(function(a){return a[c]}))).range(0,a.context_height).nice(),a.window={x:a.context_posX.range()[0]*.2,dx:(a.context_posX.range()[1]-a.context_posX.range()[0])*.6};var d,e=a._bl_data.COLUMNID.x,f=a._bl_data.COLUMNID.y,g=function(a){notifier(a)},h=(new pv.Panel).width(a.width()).height(a.height()).left(a.horizontal_padding()).right(a.horizontal_padding()).bottom(a.vertical_padding()).top(a.vertical_padding()).canvas(a.container()),i=h.add(pv.Panel),j=i.add(pv.Panel).def("init",function(){var b=a.context_posX.invert(a.window.x),c=a.context_posX.invert(a.window.x+a.window.dx),d=a._data.slice(Math.max(0,pv.search.index(a._data,b,function(a){return a[e]})-1),pv.search.index(a._data,c,function(a){return a[e]})+1);a.posX.domain(b,c),a.posY.domain(a.context_posY.domain());return d}).top(0).height(a.focus_height),k=j.add(pv.Panel).overflow("hidden").add(pv.Bar).data(function(){return j.init()}).left(function(b){return a.posX(b[e])}).height(function(b){return a.posY(b[f])}).bottom(1).width(.5).strokeStyle("red").fillStyle("red").anchor("top").add(pv.Label).fillStyle(null).visible(function(b){return b[f]>pv.mean(a.posY.domain())/2}).textBaseline("bottom").textAlign("right").textAngle(-Math.PI/2).text(function(a){return parseInt(a[f])}),l=j.add(pv.Rule).data(function(){return a.posX.ticks()}).left(a.posX).strokeStyle("#eee");l.anchor("bottom").add(pv.Label).text(a.posX.tickFormat);var m=j.add(pv.Rule).data(function(){return a.posY.ticks(7)}).bottom(a.posY).strokeStyle("#aaa").anchor("left").add(pv.Label).text(a.posY.tickFormat),n=i.add(pv.Panel).bottom(0).height(a.context_height);n.add(pv.Rule).data(a.context_posX.ticks()).left(a.context_posX).strokeStyle("#eee").anchor("bottom").add(pv.Label).text(a.context_posX.tickFormat),n.add(pv.Rule).bottom(0),n.add(pv.Bar).data(a._data).left(function(b){return a.context_posX(b[e])}).width(1).bottom(1).height(function(b){return a.context_posY(b[f])}).fillStyle("blue"),n.add(pv.Panel).data([a.window]).cursor("crosshair").events("all").event("mousedown",pv.Behavior.select()).event("select",j).add(pv.Bar).left(function(a){return a.x}).width(function(a){return a.dx}).fillStyle("rgba(255, 128, 128, .4)").cursor("move").event("mousedown",pv.Behavior.drag()).event("drag",j),h.render()},vq.models.StemPlotData=function(a){vq.models.VisData.call(this,a),this.setDataModel(),this.getDataType()=="vq.models.StemPlotData"?this._build_data(this.getContents()):console.warn("Unrecognized JSON object.  Expected vq.models.StemPlotData object.")},vq.models.StemPlotData.prototype=pv.extend(vq.models.VisData),vq.models.StemPlotData.prototype._build_data=function(a){this._processData(a),this._data.length&&this.setDataReady(!0)},vq.models.StemPlotData.prototype.setDataModel=function(){this._dataModel=[{label:"width",id:"PLOT.width",cast:Number,defaultValue:400},{label:"height",id:"PLOT.height",cast:Number,defaultValue:400},{label:"container",id:"PLOT.container",optional:!0},{label:"vertical_padding",id:"PLOT.vertical_padding",cast:Number,defaultValue:0},{label:"horizontal_padding",id:"PLOT.horizontal_padding",cast:Number,defaultValue:0},{label:"COLUMNID.x",id:"xcolumnid",cast:String,defaultValue:"x"},{label:"COLUMNID.y",id:"ycolumnid",cast:String,defaultValue:"y"},{label:"_data",id:"data_array",defaultValue:[]}]}